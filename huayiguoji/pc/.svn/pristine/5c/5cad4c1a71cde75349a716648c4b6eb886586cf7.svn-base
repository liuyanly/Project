/**
 * author: lints
 * date: 2018-04-17
 * IM发送消息
 */

/**
 *  @param {Object} customData 用戶数据对象
 * @param {Object} friendData 好友数据对象
 */
function SendMsg(customData, friendId, listeners) {
    console.log('当前ID:', customData.id);
    console.log('好友ID:', friendId);
    this.msg = []; //发送数据数组
    this.sdkAppID = 1400082841; //用户所属应用id,必填
    this.accountType = 25089; //用户所属应用帐号类型，必填
    this.loginInfo = {
        'sdkAppID': this.sdkAppID, //用户所属应用id,必填
        'identifier': customData.id, //当前用户ID,必须是否字符串类型，必填
        'accountType': this.accountType, //用户所属应用帐号类型，必填
        'userSig': customData.im_sig, //当前用户身份凭证，必须是字符串类型，必填
        'identifierNick': customData.nickname, //当前用户昵称，不用填写，登录接口会返回用户的昵称，如果没有设置，则返回用户的id
        'headurl': customData.translates.avatar_img //当前用户默认头像，选填，如果设置过头像，则可以通过拉取个人资料接口来得到头像信息
    };
    this.subType = webim.C2C_MSG_SUB_TYPE.COMMON; //消息子类型
    this.selType = webim.SESSION_TYPE.C2C; //当前聊天类型
    this.selToID = friendId; //好友id
    this.isSend = true; //是否为自己发送
    this.seq = -1; //消息序列，-1表示sdk自动生成，用于去重
    this.random = Math.round(Math.random() * 4294967296); //消息随机数，用于去重
    this.msgTime = Math.round(new Date().getTime() / 1000); //消息时间戳
    this.friendHeadUrl = customData.translates.avatar_img; //好友头像
    this.selSess = new webim.Session(this.selType, this.selToID, this.selToID, this.friendHeadUrl, Math.round(new Date()
        .getTime() / 1000))
    this.listeners = listeners; //监听方法对象
    this.options = {
        isAccessFormalEnv: true, //是否访问正式环境下的后台接口，True-访问正式，False-访问测试环境默认访问正式环境接口，选填
        isLogOn: false //	是否开启控制台打印日志,True-开启;False-关闭，默认开启，选填
    };
}

SendMsg.prototype.login = function () {
    // 登录
    webim.login(this.loginInfo, this.listeners, this.options, function (resp) {
        console.info('%clogin success', 'color:green;font-size:18px')
    }, function (err) {
        console.info('%clogin error', 'color:red;font-size:18px')
    });
}
SendMsg.prototype.initSend = function () {
    // //帐号模式，0-表示独立模式，1-表示托管模式
    // var accountMode = 0;
    // var AdminAcount = 'admin'; //管理员用户
    this.msg = new webim.Msg(this.selSess, this.isSend, this.seq, this.random, this.msgTime, this.loginInfo.identifier,
        this.subType,
        this.loginInfo.identifierNick);
}
/**
 * @param {String} msg 发送文本内容
 * @param {Function} callBack 发送成功或失败的回调函数
 */
SendMsg.prototype.sendTxt = function (msg, callBack) {
    // 文本消息
    // var text_obj = new webim.Msg.Elem.Text('大大');
    // msg.addText(text_obj);
    // 发送自定义消息
    var custom_obj = new webim.Msg.Elem.Custom(msg.title, '', msg.img);
    this.msg.addCustom(custom_obj);
    webim.sendMsg(this.msg, function (res) {
        callBack(res)
    }, function (err) {
        callBack(err)
    });
}
//上传图片进度条回调函数
//loadedSize-已上传字节数
//totalSize-图片总字节数
function onProgressCallBack(loadedSize, totalSize) {
    // console.log((loadedSize / totalSize) * 100)

}

//上传图片
SendMsg.prototype.uploadPic = function () {
    var uploadFiles = document.getElementById('upd_pic');
    var file = uploadFiles.files[0];
    //预览图片
    // var reader = new FileReader();
    // reader.onload = function (file) {
    //     console.log(file)
    // }
    var businessType; //业务类型，1-发群图片，2-向好友发图片
    businessType = webim.UPLOAD_PIC_BUSSINESS_TYPE.C2C_MSG;
    //封装上传图片请求
    console.log('图片发送好友ID:', this.selToID);
    var opt = {
        'file': file, //图片对象
        'onProgressCallBack': onProgressCallBack, //上传图片进度条回调函数
        //'abortButton': document.getElementById('upd_abort'), //停止上传图片按钮
        'To_Account': JSON.stringify(this.selToID), //接收者
        'businessType': businessType //业务类型
    };
    //上传图片
    var _this = this;
    webim.uploadPic(opt,
        function (resp) {
            //上传成功发送图片
            _this.sendPic(resp, file.name);
            // console.log(resp)
        },

        function (err) {
            console.log(err);
        }
    );
}
//发送图片消息
SendMsg.prototype.sendPic = function (images, imgName) {
    this.msg = new webim.Msg(this.selSess, this.isSend, this.seq, this.random, this.msgTime, this.loginInfo.identifier,
        this.subType,
        this.loginInfo.identifierNick);
    var images_obj = new webim.Msg.Elem.Images(images.File_UUID);
    for (var i in images.URL_INFO) {
        var img = images.URL_INFO[i];
        var newImg;
        var type;
        switch (img.PIC_TYPE) {
            case 1: //原图
                type = 1; //原图
                break;
            case 2: //小图（缩略图）
                type = 3; //小图
                break;
            case 4: //大图
                type = 2; //大图
                break;
        }
        newImg = new webim.Msg.Elem.Images.Image(type, img.PIC_Size, img.PIC_Width, img.PIC_Height, img.DownUrl);
        images_obj.addImage(newImg);
    }
    this.msg.addImage(images_obj);
    //if(imgName){
    //    var data=imgName;//通过自定义消息中的data字段保存图片名称
    //    var custom_obj = new webim.Msg.Elem.Custom(data, '', '');
    //    msg.addCustom(custom_obj);
    //}
    //调用发送图片消息接口
    webim.sendMsg(this.msg, function (resp) {
        if (this.selType == webim.SESSION_TYPE.C2C) { //私聊时，在聊天窗口手动添加一条发的消息，群聊时，长轮询接口会返回自己发的消息
            addMsg(this.msg);

        }
    }, function (err) {
        console.log(err.ErrorInfo);
    });
}