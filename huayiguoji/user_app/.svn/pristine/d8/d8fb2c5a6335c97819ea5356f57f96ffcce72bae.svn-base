<template>
	<div class="data_input">
		<headers headName="数据录入"></headers>
		<div class="contentScollr">
        <div class="nav">
            <ul id="nav">
                <li v-for="(nav,index) in navItem" :key="nav.id" @click="SubCates(nav.title,nav.id)" :class="{'active': isActive == nav.id}">
                    {{nav.title}}
                </li>
            </ul>
        </div>
        <div class="content">
            <div class="title">{{content}}</div>
            <div class="form">
                <ul>
                    <li v-for='data in inputList'>
                        <span class="name">{{data.title}}({{data.unit}})</span>
                        <input type="number" class="text" v-model="formData[data.id]" placeholder="请填写">
                    </li>
                    <li>
                        <span class="name">测量时间</span>
                        <input type="text" class="text time" placeholder="请选择测量时间" @click="openPicker" v-model="timeVal" readonly>
                        <img src="../assets/images/c13_liebiao.png" class="arrow">
                    </li>
                </ul>
            </div>
        </div>
		<p class="sub-btn" @click="subForm()">
			提交
		</p>
        <mt-datetime-picker
            ref="picker"
            type="date"
            year-format="{value}"
  month-format="{value}"
  date-format="{value}"
  @confirm="handleConfirm">
        </mt-datetime-picker>
	</div>
	</div>
</template>

<script>
//导入模板
import headers from "../components/Header.vue"
export default {
  data () {
    return {
      articles:'',
      isActive:false,
      pickerValue:'',
      content:[],
      navItem:[],
	  inputList:[],
	  formData:{},
	  timeVal:'',
    }
  },
  methods:{
  	Back(){
		this.$router.go(-1)
      },
      SubCates(val,index){
          this.content = val;
          this.isActive = index;
          this.getTemData(this.isActive);
          console.log(this.formData);
      },
      openPicker() {
            this.$refs.picker.open();
        },
        handleConfirm(res){
            this.pickerValue = res;
			let d=new Date(res);
			this.timeVal=(d.getFullYear())+'-'+((d.getMonth()+1)>9?d.getMonth()+1:'0'+(d.getMonth()+1))+'-'+(d.getDate()>9?d.getDate():'0'+d.getDate());
        },
	getNavData(){
		var that=this
		that.$ajax.get('/checktemp')
		.then(function(res){
			if(res.data.status==200){
				that.navItem = res.data.data
				that.isActive = res.data.data[0].id
				that.content = res.data.data[0].title
				that.getTemData(that.isActive)
			}else if(res.data.status==401){
				that.BaseSet.linkLogin(that)
			}else{
				that.$toast(res.data.message)
			}
		})
		.catch(function(err){
			that.$toast(err)
			that.BaseSet.linkLogin(that)
		})
	},
	getTemData(id){
		var that=this
		that.$ajax.get('/checktemp/'+id)
		.then(function(res){
			if(res.data.status==200){
                    that.inputArr = res.data.data.data;
                    var arr = [];
                    for(var i=0;i<that.inputArr.length;i++){
                        if(that.inputArr[i].id != 14){
                            arr.push(that.inputArr[i]);
                            that.inputList = arr;
                            var name=that.inputArr[i].id;
                            that.formData[name]='';
                        }
                    }
                that.formData = {};
			}else if(res.data.status==401){
				that.BaseSet.linkLogin(that)
			}else{
				that.$toast(res.data.message)
			}
		})
		.catch(function(err){
			that.$toast(err)
			that.BaseSet.linkLogin(that)
		})
	},
	subForm(){
		var that=this,
			flag=true;
		for(var i=0;i<that.inputList.length;i++){
			if(that.formData[that.inputList[i].id]==''){
                flag=false;
			}
		}
		if(that.timeVal==''){
			that.$toast('请选择测量时间')
			flag=false
		}
		if(flag){
			that.$ajax.post('/check',{
				checktemp_id:that.isActive,
				fields:JSON.stringify(that.formData),
				_me:'user-api',
				check_at:that.timeVal+' 00:00:00'
			})
			.then(function(res){
				if(res.data.status==200){
					that.$toast("数据录入成功")
					setTimeout(function(){
						that.$router.push({name:'Monitoring'})
                    },1500)
				}else if(res.data.status==401){
					that.BaseSet.linkLogin(that)
				}else{
					that.$toast(res.data.message)
				}
			})
			.catch(function(err){
				that.$toast(err)
				that.BaseSet.linkLogin(that)
			})
		}else{
			that.$toast('请填写完整信息')
		}

	}
  },
  mounted:function(){
	    this.BaseSet.getToken(this)
		this.getNavData()
        //根据导航个数计算长度
        var Lilength = this.navItem.length;
        var Navlength = document.getElementById('nav');
        if (Lilength<6) {
           Navlength.style.width = "100%"
        } else {
            var Navwidth = Lilength * 3.5
            Navlength.style.width = Navwidth+'rem'
        }
  },
  components:{headers}
}
</script>

<style lang="scss" scoped>
.data_input{
    width: 100%;
	display: flex;
	height: 100%;
	flex-direction: column;
	.contentScollr{
		flex: 1;
		overflow: scroll;
		-webkit-overflow-scrolling:touch;
	}
    .nav{
        width:auto;
        height: 2rem;
        overflow: scroll;
        background-color: #fff;
        ul{
            height: 2rem;
            overflow: scroll;
        }
        li{
            margin: 0 1rem;
            float: left;
            line-height: 1.9rem;
            font-size: .7rem;
            color: #666666;
        }
        li.active{
            border-bottom:#4CC6D8 2px solid;
        }
    }
    .content{
        width: 100%;
        overflow: hidden;
        background-color: #fff;
        .title{
            width: 100%;
            height: 2.25rem;
            background-color: #eeeeee;
            line-height: 2.25rem;
            box-sizing: border-box;
            padding: 0 .75rem;
            color: #999;
            font-size: .7rem;
        }
        .form{
            width: 100%;
            overflow: hidden;
            li{
                width: 100%;
                height: 2.25rem;
                box-sizing: border-box;
                padding: 0 .75rem;
                border-bottom: #e5e5e5 1px solid;
                overflow: hidden;
                position: relative;
                .name{
                    color: #333;
                    font-size: .7rem;
                    display: inline-block;
                    height: 2.25rem;
                    line-height: 2.25rem;
                }
                .text{
                    width: 6rem;
                    float: right;
                    text-align: right;
                    height: 1rem;
                    line-height: 1rem;
                    margin-top: .625rem;
                }
                .time{
                    margin-right: .875rem;
                }
                .text::-webkit-input-placeholder{
                    color: #999999;
                }
                .arrow{
                    width: .3rem;
                    height: .6rem;
                    position: absolute;
                    right: .75rem;
                    top: 50%;
                    margin-top: -0.3rem;
                }
            }
        }
    }
	.sub-btn{
		width: 17.2rem /* 688/40 */;
		height: 2rem /* 82/40 */;
		border-radius: .3rem /* 10/40 */;
		background: #4cc6d8;
		text-align: center;
		color: #fff;
		line-height: 2rem /* 82/40 */;
		font-size: .8rem /* 32/40 */;
		margin: 0 auto;
		margin-top: 2.5rem /* 100/40 */;
	}
}
</style>
